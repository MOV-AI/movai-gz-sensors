name: "Deploy - To Nexus On Github Release"
on:
  push:
  # release:
  #   types: [released]
    
jobs:
  focal-ci:
    runs-on: ubuntu-latest
    name: Ubuntu Focal CI
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find Package details
        id: vars
        run: |
          CMAKE_LISTS="CMakeLists.txt"
          PACKAGE_NAME=$(grep -m 1 "project(" "$CMAKE_LISTS" | sed -n 's/project(\(.*\) VERSION \(.*\))/\1/p')
          PACKAGE_VERSION=$(grep -m 1 "project(" "$CMAKE_LISTS" | sed -n 's/project(\(.*\) VERSION \(.*\))/\2/p')
          echo "pkg_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "pkg_version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT

      - name: Raise Version
        id: vars-after-raise
        run: |
          PACKAGE_VERSION=${{ steps.vars.outputs.pkg_version }}
          IFS='.' read -ra version_parts <<< "$PACKAGE_VERSION"
          main_version="${version_parts[:-1]}"
          patch_version="${version_parts[-1]}"
          raised_patchversion=$(($patch_version+1))
          RAISED_PACKAGE_VERSION="$main_version.$raised_patchversion"
          echo "pkg_version=$RAISED_PACKAGE_VERSION" >> $GITHUB_OUTPUT

      - name: Update Version
        run: |
          NEW_VERSION=${{ steps.vars-after-raise.outputs.pkg_version }}
          PACKAGE_NAME=${{ steps.vars.outputs.pkg_name }}
          sed -i "s/\(project($PACKAGE_NAME VERSION \)[0-9.]*\()\)/\1$NEW_VERSION\2/" CMakeLists.txt

      - name: Compile, test and package
        id: ci
        uses: ignition-tooling/action-ignition-ci@focal
        with:
          cpplint-enabled: true
          cmake-args: 'CMAKE_BUILD_TYPE=Release'

      - name: Archive debian artifact
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: artifacts/*
          retention-days: 5

      - name: Publish to Nexus
        shell: bash
        run: |
          NEXUS_REPO="ppa-dev"
          NEXUS_ENDPOINT="artifacts.aws.cloud.mov.ai"

          for file in artifacts/*.deb
          do
            RETURN_CODE=$(curl -u "${{ secrets.NEXUS_PUBLISHER_USR }}:${{ secrets.NEXUS_PUBLISHER_PWD }}" \
            -H "Content-Type: multipart/form-data" \
            --data-binary "@$file" \
            -w '%{http_code}' \
            "https://$NEXUS_ENDPOINT/repository/$NEXUS_REPO/")

            #retry
            if [[ ! "$RETURN_CODE" =~ ^(200|201|202)$ ]]; then
              echo "Failed upload with $RETURN_CODE. Retrying"

              RETURN_CODE=$(curl -u "${{ secrets.NEXUS_PUBLISHER_USR }}:${{ secrets.NEXUS_PUBLISHER_PWD }}" \
                -H "Content-Type: multipart/form-data" \
                --data-binary "@$file" \
                -w '%{http_code}' \
                "https://$NEXUS_ENDPOINT/repository/$NEXUS_REPO/")
            fi

            if [[ ! "$RETURN_CODE" =~ ^(200|201|202)$ ]]; then
              echo "Failed upload with $RETURN_CODE. Exiting"
              exit 1
            fi

          done
      
      - name: Commit raise version
        run: |
          git config --global --add safe.directory $(pwd)
          git config --global user.name '${{ secrets.RAISE_BOT_COMMIT_USER }}'
          git config --global user.email '${{ secrets.RAISE_BOT_COMMIT_MAIL }}'
          git pull
          git add CMakeLists.txt
          git commit -m "[skip actions] Automatic Bump of build version"
          git push
          commit_hash=$(git log --format="%H" -n 1)
          echo "commit_id=$commit_hash" >> $GITHUB_OUTPUT
